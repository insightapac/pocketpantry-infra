# CI pipeline to test and build the Voce software silo deployment assets.

trigger:
  branches:
    include:
    - master

pool:
  vmImage: 'Ubuntu-16.04'

steps:

- task: AzureKeyVault@1
  displayName: 'Retrieve Key Vault secrets'
  inputs:
    azureSubscription: 'veli-msdn'
    KeyVaultName: 'pocketpantry-core-vault'
    SecretsFilter: 'tf-remote-state-rg,tf-remote-state-account,tf-backend-container-core,tf-remote-state-account-primary-key'

- task: ShellScript@2
  displayName: 'Install latest Terraform version'
  inputs:
    scriptPath: scripts/getTerraform.sh

- task: AzureCLI@1
  displayName: 'terraform init - Framework'
  inputs:
    azureSubscription: 'veli-msdn'
    scriptLocation: scriptPath
    scriptPath: scripts/buildTerraformInit.sh
    arguments: '$(tf-remote-state-rg) $(tf-remote-state-account) $(tf-remote-state-account-primary-key) $(tf-backend-container-core)'
    workingDirectory: infrastructure/pocketpantry
    addSpnToEnvironment: true
    failOnStandardError: true

- task: AzureCLI@1
  displayName: 'terraform validate - Framework'
  inputs:
    azureSubscription: 'veli-msdn'
    scriptLocation: scriptPath
    scriptPath: scripts/buildTerraformValidate.sh
    workingDirectory: infrastructure/pocketpantry
    addSpnToEnvironment: true
    failOnStandardError: true

- task: AzureCLI@1
  displayName: 'terraform plan - Framework'
  inputs:
    azureSubscription: 'veli-msdn'
    scriptLocation: scriptPath
    scriptPath: scripts/buildTerraformPlan.sh
    arguments: '$(tf-remote-state-rg) $(tf-remote-state-account) $(tf-remote-state-account-primary-key) $(tf-backend-container-core)'
    workingDirectory: infrastructure/pocketpantry
    addSpnToEnvironment: true
    failOnStandardError: true

- task: Bash@3
  displayName: 'Clean Terraform assets - Framework'
  inputs:
      targetType: 'filePath'
      filePath: scripts/cleanFolder.sh
      workingDirectory: infrastructure/pocketpantry
      failOnStderr: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: scripts'
  inputs:
    publishLocation: Container
    PathtoPublish: scripts
    ArtifactName: 'scripts'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: infrastructure'
  inputs:
    publishLocation: Container
    PathtoPublish: infrastructure/pocketpantry
    ArtifactName: 'infrastructure'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: modules'
  inputs:
    publishLocation: Container
    PathtoPublish: infrastructure/modules
    ArtifactName: 'modules'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))